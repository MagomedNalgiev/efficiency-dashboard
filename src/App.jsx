import { Link } from "react-router-dom";
import { useSubscription } from "./contexts/SubscriptionContext";
import { useAuth } from "./contexts/AuthContext";

function App() {
  const { checkAccess, currentPlan, currentPlanInfo } = useSubscription();
  const { isAuthenticated } = useAuth();

  return (
    <div className="min-h-screen flex flex-col py-8 w-full px-8 md:px-16 pt-16">
      <h1 className="text-4xl font-bold text-white mb-6">Metricspace</h1>
      <p className="text-white/80 mb-8 max-w-4xl">
        –ë—ã—Å—Ç—Ä—ã–π —Ä–∞—Å—á—ë—Ç –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ IT-–∫–æ–º–∞–Ω–¥: Velocity,
        Cycle Time, MTTR, Deployment Frequency –∏ –¥—Ä—É–≥–∏—Ö.
        –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–π—Ç–µ, —Å—Ç—Ä–æ–π—Ç–µ –≥—Ä–∞—Ñ–∏–∫–∏ –∏ —É–ª—É—á—à–∞–π—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã.
      </p>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–Ω–µ */}
      {isAuthenticated && (
        <div className="mb-8 p-4 bg-white/10 backdrop-blur-sm rounded-xl">
          <div className="flex justify-between items-center">
            <div>
              <span className="text-white/80">–í–∞—à –ø–ª–∞–Ω: </span>
              <span className="text-white font-bold">{currentPlanInfo?.name}</span>
              {currentPlan === 'FREE' && currentPlanInfo && (
                <span className="text-orange-400 ml-2">
                  ({(currentPlanInfo.limits.calculationsPerMonth - (currentPlanInfo.usage?.calculationsThisMonth || 0))} —Ä–∞—Å—á–µ—Ç–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å)
                </span>
              )}
            </div>
            {currentPlan === 'FREE' && (
              <Link
                to="/pricing"
                className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm transition-colors"
              >
                –£–ª—É—á—à–∏—Ç—å –ø–ª–∞–Ω
              </Link>
            )}
          </div>
        </div>
      )}

      {/* –ò–ó–ú–ï–ù–ò–¢–¨ –≤—Å–µ —Å—Å—ã–ª–∫–∏ - –¥–æ–±–∞–≤–∏—Ç—å /app/ –≤ –Ω–∞—á–∞–ª–æ */}

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è: Delivery */}
      <div className="mb-8">
        <h2 className="text-2xl font-bold text-white mb-4">Delivery</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <Card
            title="Velocity"
            description="–†–∞—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã"
            to="/app/velocity" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('velocity')}
            planRequired={!checkAccess('velocity') ? 'PRO' : null}
          />
          <Card
            title="Cycle Time"
            description="–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏"
            to="/app/cycletime" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('cycletime')}
            planRequired={!checkAccess('cycletime') ? 'PRO' : null}
          />
          <Card
            title="Deployment Frequency"
            description="–ß–∞—Å—Ç–æ—Ç–∞ –¥–µ–ø–ª–æ–µ–≤"
            to="/app/deploymentfrequency" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('deploymentfrequency')}
            planRequired={!checkAccess('deploymentfrequency') ? 'PRO' : null}
          />
        </div>
      </div>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è: Quality */}
      <div className="mb-8">
        <h2 className="text-2xl font-bold text-white mb-4">Quality</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <Card
            title="Defect Leakage"
            description="–ê–Ω–∞–ª–∏–∑ –±–∞–≥–æ–≤ –∏ –∫–∞—á–µ—Å—Ç–≤–∞"
            to="/app/defectleakage" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('defectleakage')}
            planRequired={!checkAccess('defectleakage') ? 'PRO' : null}
          />
          <Card
            title="MTTR"
            description="–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
            to="/app/mttr" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('mttr')}
            planRequired={!checkAccess('mttr') ? 'PRO' : null}
          />
        </div>
      </div>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ */}
      <div className="mb-8">
        <h2 className="text-2xl font-bold text-white mb-4">–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <Card
            title="CAC"
            description="Customer Acquisition Cost"
            to="/app/cac" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('cac')}
            planRequired={!checkAccess('cac') ? 'PRO' : null}
          />
          <Card
            title="ROMI"
            description="Return on Marketing Investment"
            to="/app/romi" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('romi')}
            planRequired={!checkAccess('romi') ? 'PRO' : null}
          />
          <Card
            title="LTV"
            description="Lifetime Value"
            to="/app/ltv" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('ltv')}
            planRequired={!checkAccess('ltv') ? 'PRO' : null}
          />
        </div>
      </div>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –§–∏–Ω–∞–Ω—Å—ã */}
      <div className="mb-8">
        <h2 className="text-2xl font-bold text-white mb-4">–§–∏–Ω–∞–Ω—Å—ã</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <Card
            title="EBITDA"
            description="–ü—Ä–∏–±—ã–ª—å –¥–æ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è"
            to="/app/ebitda" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('ebitda')}
            planRequired={!checkAccess('ebitda') ? 'PRO' : null}
          />
          <Card
            title="ROS"
            description="Return on Sales"
            to="/app/ros" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('ros')}
            planRequired={!checkAccess('ros') ? 'PRO' : null}
          />
          <Card
            title="BEP"
            description="Break-even point"
            to="/app/bep" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('bep')}
            planRequired={!checkAccess('bep') ? 'PRO' : null}
          />
        </div>
      </div>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ü—Ä–æ—á–µ–µ */}
      <div className="mb-8">
        <h2 className="text-2xl font-bold text-white mb-4">–ü—Ä–æ—á–µ–µ</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <Card
            title="Custom Metric"
            description="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –º–µ—Ç—Ä–∏–∫–∞"
            to="/app/custommetric" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={checkAccess('custommetric')}
            planRequired={!checkAccess('custommetric') ? 'PRO' : null}
          />
        </div>
      </div>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
      <div className="mb-8">
        <h2 className="text-2xl font-bold text-white mb-4">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <Card
            title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏"
            description="–≠–∫—Å–ø–æ—Ä—Ç –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
            to="/app/data-manager" // –ò–ó–ú–ï–ù–ò–¢–¨
            hasAccess={true}
          />
        </div>
      </div>
    </div>
  );
}

function Card({ title, description, to, hasAccess = true, planRequired = null }) {
  return (
    <Link
      to={to}
      className={`block bg-white/10 backdrop-blur-sm rounded-xl p-6 shadow hover:bg-white/20 transition duration-200 relative ${
        !hasAccess ? 'opacity-75' : ''
      }`}
    >
      {!hasAccess && (
        <div className="absolute top-3 right-3">
          <div className="bg-yellow-500 text-black text-xs px-2 py-1 rounded-full font-bold">
            {planRequired}
          </div>
        </div>
      )}

      {!hasAccess && (
        <div className="absolute inset-0 flex items-center justify-center bg-black/20 rounded-xl">
          <span className="text-4xl">üîí</span>
        </div>
      )}

      <h3 className="text-xl font-semibold text-white mb-2">{title}</h3>
      <p className="text-white/70">{description}</p>
    </Link>
  );
}

export default App;
