import { useState } from "react";
import { Line } from "react-chartjs-2";
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
} from "chart.js";

ChartJS.register(
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend
);

export default function CalculatorDeploymentFrequency() {
  const [deployments, setDeployments] = useState("");
  const [periodDays, setPeriodDays] = useState("");
  const [frequency, setFrequency] = useState(null);

  const calculateFrequency = () => {
    if (periodDays > 0) {
      const result = (deployments / periodDays).toFixed(2);
      setFrequency(result);
    } else {
      setFrequency(null);
    }
  };

  const data = {
    labels: Array.from({ length: deployments || 0 }, (_, i) => `–î–µ–ø–ª–æ–π ${i + 1}`),
    datasets: [
      {
        label: "–ß–∞—Å—Ç–æ—Ç–∞ –¥–µ–ø–ª–æ–µ–≤ (–≤ –¥–µ–Ω—å)",
        data: Array.from({ length: deployments || 0 }, () => frequency || 0),
        borderColor: "rgb(34,197,94)", // green
        backgroundColor: "rgba(34,197,94,0.3)",
      },
    ],
  };

  return (
    <div className="min-h-screen bg-gray-900 text-white flex flex-col items-center p-6">
      <h1 className="text-3xl font-bold text-green-400 mb-4">üöÄ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä Deployment Frequency</h1>
      <p className="text-gray-300 max-w-md text-center mb-6">
        –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ø–ª–æ–µ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –ø–µ—Ä–∏–æ–¥–µ, —á—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É –¥–µ–ø–ª–æ–µ–≤ (—Å–∫–æ–ª—å–∫–æ –¥–µ–ø–ª–æ–µ–≤ –≤ —Å—Ä–µ–¥–Ω–µ–º –≤ –¥–µ–Ω—å).
      </p>

      <div className="bg-gray-800 p-6 rounded-lg shadow-md w-full max-w-md">
        <label className="block mb-2 text-sm">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ø–ª–æ–µ–≤:</label>
        <input
          type="number"
          value={deployments}
          onChange={(e) => setDeployments(e.target.value)}
          className="w-full p-2 mb-4 rounded text-black"
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 25"
        />
        <label className="block mb-2 text-sm">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –ø–µ—Ä–∏–æ–¥–µ:</label>
        <input
          type="number"
          value={periodDays}
          onChange={(e) => setPeriodDays(e.target.value)}
          className="w-full p-2 mb-4 rounded text-black"
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 30"
        />
        <button
          onClick={calculateFrequency}
          className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded w-full"
        >
          –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É –¥–µ–ø–ª–æ–µ–≤
        </button>
        {frequency && (
          <p className="mt-4 text-lg text-center">
            –ß–∞—Å—Ç–æ—Ç–∞ –¥–µ–ø–ª–æ–µ–≤:{" "}
            <span className="text-green-400 font-semibold">{frequency}</span> –¥–µ–ø–ª–æ–µ–≤/–¥–µ–Ω—å
          </p>
        )}
      </div>

      {frequency && (
        <div className="mt-8 w-full max-w-2xl">
          <Line data={data} />
        </div>
      )}
    </div>
  );
}
